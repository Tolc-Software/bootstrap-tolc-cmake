name: Ubuntu

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"

    steps:
    - uses: actions/checkout@v2

    - name: Configure
      run: |
        cd tests
        cmake -S. -Bbuild -DCMAKE_CXX_COMPILER="clang++" -DCMAKE_C_COMPILER="clang" -DCMAKE_BUILD_TYPE="Release"

    - name: Build
      run: cmake --build tests/build -j4

    - name: Setup go
      if: github.ref == 'refs/heads/main'
      uses: actions/setup-go@v2
      with:
        go-version: '1.14'

    - name: Setup go cache
      if: github.ref == 'refs/heads/main'
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Push main release
      if: github.ref == 'refs/heads/main'
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        go get -v github.com/github-release/github-release
        echo "Checking if a new release is needed"
        github-release release --user Tolc-Software --repo bootstrap-tolc-cmake --tag main-release --name "Main release" --description "This release gets updated with each commit to main" || true
        echo "Pushing the release"
        github-release upload --user Tolc-Software --repo bootstrap-tolc-cmake --tag main-release --name "tolc.cmake" --file tolc.cmake --replace
